# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-03-02 08:32
from __future__ import unicode_literals

import ckeditor.fields
import dirtyfields.dirtyfields
from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mooringlicensing.components.approvals.models
import mooringlicensing.components.compliances.models
import mooringlicensing.components.organisations.models
import mooringlicensing.components.proposals.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
        ('accounts', '0024_organisation_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='AmendmentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=125, verbose_name='Reason')),
            ],
            options={
                'verbose_name': 'Application Amendment Reason',
                'verbose_name_plural': 'Application Amendment Reasons',
            },
        ),
        migrations.CreateModel(
            name='ApplicationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Waiting List Application', 'Waiting List Application'), ('Annual Admission Application', 'Annual Admission Application'), ('Authorised User Application', 'Authorised User Application'), ('Mooring License Application', 'Mooring License Application')], max_length=64, verbose_name='Application Type name')),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('visible', models.BooleanField(default=True)),
                ('application_fee', models.DecimalField(decimal_places=2, max_digits=6)),
                ('oracle_code_application', models.CharField(max_length=50)),
                ('is_gst_exempt', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lodgement_number', models.CharField(blank=True, default='', max_length=9)),
                ('status', models.CharField(choices=[('current', 'Current'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('surrendered', 'Surrendered'), ('suspended', 'Suspended'), ('extended', 'extended'), ('awaiting_payment', 'Awaiting Payment')], default='current', max_length=40)),
                ('renewal_sent', models.BooleanField(default=False)),
                ('issue_date', models.DateTimeField()),
                ('original_issue_date', models.DateField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('surrender_details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('suspension_details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('extracted_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('cancellation_details', models.TextField(blank=True)),
                ('extend_details', models.TextField(blank=True)),
                ('cancellation_date', models.DateField(blank=True, null=True)),
                ('set_to_cancel', models.BooleanField(default=False)),
                ('set_to_suspend', models.BooleanField(default=False)),
                ('set_to_surrender', models.BooleanField(default=False)),
                ('renewal_count', models.PositiveSmallIntegerField(default=0, verbose_name='Number of times an Approval has been renewed')),
                ('migrated', models.BooleanField(default=False)),
                ('extended', models.BooleanField(default=False)),
                ('expiry_notice_sent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.approvals.models.update_approval_doc_filename)),
                ('can_delete', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, null=True, upload_to=mooringlicensing.components.approvals.models.update_approval_comms_log_filename)),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
            ],
            options={
                'ordering': ('-when',),
            },
        ),
        migrations.CreateModel(
            name='ChecklistQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('list_type', models.CharField(choices=[('assessor_list', 'Assessor Checklist'), ('referral_list', 'Referral Checklist')], default='assessor_list', max_length=30, verbose_name='Checklist type')),
                ('answer_type', models.CharField(choices=[('yes_no', 'Yes/No type'), ('free_text', 'Free text type')], default='yes_no', max_length=30, verbose_name='Answer type')),
                ('obsolete', models.BooleanField(default=False)),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('application_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.ApplicationType')),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationsLogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to', models.TextField(blank=True, verbose_name='To')),
                ('fromm', models.CharField(blank=True, max_length=200, verbose_name='From')),
                ('cc', models.TextField(blank=True, verbose_name='cc')),
                ('type', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone Call'), ('mail', 'Mail'), ('person', 'In Person'), ('onhold', 'On Hold'), ('onhold_remove', 'Remove On Hold'), ('with_qaofficer', 'With QA Officer'), ('with_qaofficer_completed', 'QA Officer Completed'), ('referral_complete', 'Referral Completed')], default='email', max_length=35)),
                ('reference', models.CharField(blank=True, max_length=100)),
                ('subject', models.CharField(blank=True, max_length=200, verbose_name='Subject / Description')),
                ('text', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Compliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lodgement_number', models.CharField(blank=True, default='', max_length=9)),
                ('due_date', models.DateField()),
                ('text', models.TextField(blank=True)),
                ('num_participants', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of participants')),
                ('processing_status', models.CharField(choices=[('due', 'Due'), ('future', 'Future'), ('with_assessor', 'With Assessor'), ('approved', 'Approved'), ('discarded', 'Discarded')], max_length=20)),
                ('customer_status', models.CharField(choices=[('due', 'Due'), ('future', 'Future'), ('with_assessor', 'Under Review'), ('approved', 'Approved'), ('discarded', 'Discarded')], default='future', max_length=20)),
                ('lodgement_date', models.DateTimeField(blank=True, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('post_reminder_sent', models.BooleanField(default=False)),
                ('fee_invoice_reference', models.CharField(blank=True, default='', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceAmendmentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=125, verbose_name='Reason')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.compliances.models.update_proposal_complaince_filename)),
                ('can_delete', models.BooleanField(default=True)),
                ('compliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.Compliance')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.compliances.models.update_compliance_comms_log_filename)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('compliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.Compliance')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(choices=[('', '')], max_length=255)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Global Settings',
            },
        ),
        migrations.CreateModel(
            name='HelpPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField()),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('help_type', models.SmallIntegerField(choices=[(1, 'External'), (2, 'Internal')], default=1, verbose_name='Help Type')),
                ('version', models.SmallIntegerField(default=1)),
                ('application_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.ApplicationType')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_pin_one', models.CharField(blank=True, max_length=50)),
                ('admin_pin_two', models.CharField(blank=True, max_length=50)),
                ('user_pin_one', models.CharField(blank=True, max_length=50)),
                ('user_pin_two', models.CharField(blank=True, max_length=50)),
                ('bpay_allowed', models.BooleanField(default=False, verbose_name='BPAY Allowed')),
                ('monthly_invoicing_allowed', models.BooleanField(default=False)),
                ('monthly_invoicing_period', models.SmallIntegerField(default=0, verbose_name='Monthly Invoicing Period (in #days from beginning of the following month)')),
                ('monthly_payment_due_period', models.SmallIntegerField(default=20, verbose_name='Monthly Payment Due Period (in #days from Invoicing Date)')),
                ('apply_application_discount', models.BooleanField(default=False)),
                ('application_discount', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('apply_licence_discount', models.BooleanField(default=False)),
                ('licence_discount', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('event_training_completed', models.BooleanField(default=False)),
                ('event_training_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationAccessGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('site', models.OneToOneField(default='1', on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'verbose_name_plural': 'Organisation access group',
            },
        ),
        migrations.CreateModel(
            name='OrganisationAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.Organisation')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('active', 'Active'), ('declined', 'Declined'), ('unlinked', 'Unlinked'), ('suspended', 'Suspended')], default='draft', max_length=40, verbose_name='Status')),
                ('user_role', models.CharField(choices=[('organisation_admin', 'Organisation Admin'), ('organisation_user', 'Organisation User'), ('consultant', 'Consultant')], default='organisation_user', max_length=40, verbose_name='Role')),
                ('is_admin', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=128, verbose_name='Given name(s)')),
                ('last_name', models.CharField(max_length=128)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='phone number')),
                ('mobile_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='mobile number')),
                ('fax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='fax number')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='mooringlicensing.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.organisations.models.update_organisation_comms_log_filename)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('abn', models.CharField(blank=True, max_length=50, null=True, verbose_name='ABN')),
                ('identification', models.FileField(blank=True, max_length=512, null=True, upload_to='organisation/requests/%Y/%m/%d')),
                ('status', models.CharField(choices=[('with_assessor', 'With Assessor'), ('approved', 'Approved'), ('declined', 'Declined')], default='with_assessor', max_length=100)),
                ('lodgement_date', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(choices=[('employee', 'Employee'), ('consultant', 'Consultant')], default='employee', max_length=100)),
                ('assigned_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='org_request_assignee', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationRequestDeclinedDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True)),
                ('officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.OrganisationRequest')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationRequestLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.organisations.models.update_organisation_request_comms_log_filename)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationRequestUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.OrganisationRequest')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposal_type', models.CharField(choices=[('new_proposal', 'New Application'), ('amendment', 'Amendment'), ('renewal', 'Renewal'), ('external', 'External')], default='new_proposal', max_length=40, verbose_name='Application Status Type')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('assessor_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('comment_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('schema', django.contrib.postgres.fields.jsonb.JSONField()),
                ('proposed_issuance_approval', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('customer_status', models.CharField(choices=[('temp', 'Temporary'), ('draft', 'Draft'), ('with_assessor', 'Under Review'), ('amendment_required', 'Amendment Required'), ('approved', 'Approved'), ('declined', 'Declined'), ('discarded', 'Discarded'), ('partially_approved', 'Partially Approved'), ('partially_declined', 'Partially Declined'), ('awaiting_payment', 'Awaiting Payment')], default='draft', max_length=40, verbose_name='Customer Status')),
                ('lodgement_number', models.CharField(blank=True, default='', max_length=9)),
                ('lodgement_sequence', models.IntegerField(blank=True, default=0)),
                ('lodgement_date', models.DateTimeField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('temp', 'Temporary'), ('draft', 'Draft'), ('with_assessor', 'With Assessor'), ('with_district_assessor', 'With District Assessor'), ('on_hold', 'On Hold'), ('with_qa_officer', 'With QA Officer'), ('with_referral', 'With Referral'), ('with_assessor_requirements', 'With Assessor (Requirements)'), ('with_approver', 'With Approver'), ('renewal', 'Renewal'), ('licence_amendment', 'Licence Amendment'), ('awaiting_applicant_respone', 'Awaiting Applicant Response'), ('awaiting_assessor_response', 'Awaiting Assessor Response'), ('awaiting_responses', 'Awaiting Responses'), ('ready_for_conditions', 'Ready for Conditions'), ('ready_to_issue', 'Ready to Issue'), ('approved', 'Approved'), ('declined', 'Declined'), ('discarded', 'Discarded'), ('partially_approved', 'Partially Approved'), ('partially_declined', 'Partially Declined'), ('awaiting_payment', 'Awaiting Payment')], default='draft', max_length=30, verbose_name='Processing Status')),
                ('prev_processing_status', models.CharField(blank=True, max_length=30, null=True)),
                ('proposed_decline_status', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('approval_level', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity matrix approval level')),
                ('approval_comment', models.TextField(blank=True)),
                ('migrated', models.BooleanField(default=False)),
                ('application_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.ApplicationType')),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProposalApproverGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Application Approver Group',
                'verbose_name_plural': 'Application Approver Group',
            },
        ),
        migrations.CreateModel(
            name='ProposalAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment', to='mooringlicensing.Proposal')),
                ('submitter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proposal_assessment', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalAssessmentAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.NullBooleanField()),
                ('text_answer', models.CharField(blank=True, max_length=256, null=True)),
                ('assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='mooringlicensing.ProposalAssessment')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='mooringlicensing.ChecklistQuestion')),
            ],
            options={
                'verbose_name': 'Assessment answer',
                'verbose_name_plural': 'Assessment answers',
            },
        ),
        migrations.CreateModel(
            name='ProposalAssessorGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Application Assessor Group',
                'verbose_name_plural': 'Application Assessor Group',
            },
        ),
        migrations.CreateModel(
            name='ProposalDeclinedDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True)),
                ('cc_email', models.TextField(null=True)),
                ('officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_proposal_doc_filename)),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.Proposal')),
            ],
            options={
                'verbose_name': 'Application Document',
            },
        ),
        migrations.CreateModel(
            name='ProposalLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_proposal_comms_log_filename)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalOnHold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('documents', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='onhold_documents', to='mooringlicensing.ProposalDocument')),
                ('officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('free_requirement', models.TextField(blank=True, null=True)),
                ('standard', models.BooleanField(default=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('recurrence', models.BooleanField(default=False)),
                ('recurrence_pattern', models.SmallIntegerField(choices=[(1, 'Weekly'), (2, 'Monthly'), (3, 'Yearly')], default=1)),
                ('recurrence_schedule', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('copied_for_renewal', models.BooleanField(default=False)),
                ('require_due_date', models.BooleanField(default=False)),
                ('copied_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.ProposalRequirement')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='mooringlicensing.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalStandardRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('code', models.CharField(max_length=10, unique=True)),
                ('obsolete', models.BooleanField(default=False)),
                ('participant_number_required', models.BooleanField(default=False)),
                ('default', models.BooleanField(default=False)),
                ('application_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.ApplicationType')),
            ],
            options={
                'verbose_name': 'Application Standard Requirement',
                'verbose_name_plural': 'Application Standard Requirements',
            },
        ),
        migrations.CreateModel(
            name='ProposalUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.Proposal')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-when',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('answer_one', models.CharField(blank=True, max_length=200)),
                ('answer_two', models.CharField(blank=True, max_length=200)),
                ('answer_three', models.CharField(blank=True, max_length=200)),
                ('answer_four', models.CharField(blank=True, max_length=200)),
                ('correct_answer', models.CharField(choices=[('answer_one', 'Answer one'), ('answer_two', 'Answer two'), ('answer_three', 'Answer three'), ('answer_four', 'Answer four')], default='answer_one', max_length=40, verbose_name='Correct Answer')),
                ('application_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.ApplicationType')),
            ],
        ),
        migrations.CreateModel(
            name='RequirementDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_requirement_doc_filename)),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('visible', models.BooleanField(default=True)),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_documents', to='mooringlicensing.ProposalRequirement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemMaintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'verbose_name_plural': 'System maintenance',
            },
        ),
        migrations.CreateModel(
            name='TemporaryDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=255, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryDocumentCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserDelegation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.Organisation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSystemSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='system_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User System Settings',
            },
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nominated_vessel', models.CharField(blank=True, max_length=200)),
                ('spv_no', models.CharField(blank=True, max_length=200)),
                ('hire_rego', models.CharField(blank=True, max_length=200)),
                ('craft_no', models.CharField(blank=True, max_length=200)),
                ('size', models.CharField(blank=True, max_length=200)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vessels', to='mooringlicensing.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='AmendmentRequest',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.ProposalRequest')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('amended', 'Amended')], default='requested', max_length=30, verbose_name='Status')),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.AmendmentReason')),
            ],
            bases=('mooringlicensing.proposalrequest',),
        ),
        migrations.CreateModel(
            name='ApprovalLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.CommunicationsLogEntry')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.ProposalRequest')),
                ('status', models.CharField(choices=[('awaiting_assessment', 'Awaiting Assessment'), ('assessed', 'Assessed'), ('assessment_expired', 'Assessment Period Expired')], default='awaiting_assessment', max_length=20, verbose_name='Status')),
                ('date_last_reminded', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('purpose', models.TextField(blank=True)),
                ('assigned_assessor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('mooringlicensing.proposalrequest',),
        ),
        migrations.CreateModel(
            name='ComplianceAmendmentRequest',
            fields=[
                ('comprequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.CompRequest')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('amended', 'Amended')], default='requested', max_length=30, verbose_name='Status')),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.ComplianceAmendmentReason')),
            ],
            bases=('mooringlicensing.comprequest',),
        ),
        migrations.CreateModel(
            name='ComplianceLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.CommunicationsLogEntry')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='ComplianceRequest',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.ProposalRequest')),
                ('reason', models.CharField(choices=[('outstanding', 'There are currently outstanding returns for the previous licence'), ('other', 'Other')], default='outstanding', max_length=30, verbose_name='Reason')),
            ],
            bases=('mooringlicensing.proposalrequest',),
        ),
        migrations.CreateModel(
            name='OrganisationLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.CommunicationsLogEntry')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='OrganisationRequestLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.CommunicationsLogEntry')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.OrganisationRequest')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='PreviewTempApproval',
            fields=[
                ('approval_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.Approval')),
            ],
            bases=('mooringlicensing.approval',),
        ),
        migrations.CreateModel(
            name='ProposalLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.CommunicationsLogEntry')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.AddField(
            model_name='temporarydocument',
            name='temp_document_collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.TemporaryDocumentCollection'),
        ),
        migrations.AddField(
            model_name='proposalrequirement',
            name='standard_requirement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.ProposalStandardRequirement'),
        ),
        migrations.AddField(
            model_name='proposalrequest',
            name='officer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposalrequest',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposalrequest_set', to='mooringlicensing.Proposal'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='approval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.Approval'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='approval_level_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approval_level_document', to='mooringlicensing.ProposalDocument'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='assigned_approver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mooringlicensing_proposals_approvals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposal',
            name='assigned_officer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mooringlicensing_proposals_assigned', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposal',
            name='org_applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='org_applications', to='mooringlicensing.Organisation'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='previous_application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.Proposal'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='proxy_applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mooringlicensing_proxy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposal',
            name='submitter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mooringlicensing_proposals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organisation',
            name='delegates',
            field=models.ManyToManyField(blank=True, related_name='mooringlicensing_organisations', through='mooringlicensing.UserDelegation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organisation',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Organisation'),
        ),
        migrations.AddField(
            model_name='comprequest',
            name='compliance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.Compliance'),
        ),
        migrations.AddField(
            model_name='comprequest',
            name='officer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='compliance',
            name='approval',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliances', to='mooringlicensing.Approval'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mooringlicensing_compliance_assignments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='compliance',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliances', to='mooringlicensing.Proposal'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='requirement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compliance_requirement', to='mooringlicensing.ProposalRequirement'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='submitter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mooringlicensing_compliances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationslogentry',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationslogentry',
            name='staff',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='approvaluseraction',
            name='approval',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.Approval'),
        ),
        migrations.AddField(
            model_name='approvaluseraction',
            name='who',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='approvaldocument',
            name='approval',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.Approval'),
        ),
        migrations.AddField(
            model_name='approval',
            name='cover_letter_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cover_letter_document', to='mooringlicensing.ApprovalDocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='current_proposal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='mooringlicensing.Proposal'),
        ),
        migrations.AddField(
            model_name='approval',
            name='licence_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='licence_document', to='mooringlicensing.ApprovalDocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='org_applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='org_approvals', to='mooringlicensing.Organisation'),
        ),
        migrations.AddField(
            model_name='approval',
            name='proxy_applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='proxy_approvals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='approval',
            name='renewal_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='renewal_document', to='mooringlicensing.ApprovalDocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='replaced_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.Approval'),
        ),
        migrations.AddField(
            model_name='approval',
            name='submitter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='mooringlicensing_approvals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='userdelegation',
            unique_together=set([('organisation', 'user')]),
        ),
        migrations.AddField(
            model_name='proposallogentry',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.Proposal'),
        ),
        migrations.AddField(
            model_name='proposallogdocument',
            name='log_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.ProposalLogEntry'),
        ),
        migrations.AlterUniqueTogether(
            name='proposalassessment',
            unique_together=set([('proposal',)]),
        ),
        migrations.AddField(
            model_name='organisationrequestlogdocument',
            name='log_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.OrganisationRequestLogEntry'),
        ),
        migrations.AddField(
            model_name='organisationlogentry',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.Organisation'),
        ),
        migrations.AddField(
            model_name='organisationlogdocument',
            name='log_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.OrganisationLogEntry'),
        ),
        migrations.AlterUniqueTogether(
            name='organisationcontact',
            unique_together=set([('organisation', 'email')]),
        ),
        migrations.AlterUniqueTogether(
            name='helppage',
            unique_together=set([('application_type', 'help_type', 'version')]),
        ),
        migrations.AddField(
            model_name='compliancelogentry',
            name='compliance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.Compliance'),
        ),
        migrations.AddField(
            model_name='compliancelogdocument',
            name='log_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.ComplianceLogEntry'),
        ),
        migrations.AddField(
            model_name='approvallogentry',
            name='approval',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.Approval'),
        ),
        migrations.AddField(
            model_name='approvallogdocument',
            name='log_entry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.ApprovalLogEntry'),
        ),
        migrations.AlterUniqueTogether(
            name='approval',
            unique_together=set([('lodgement_number', 'issue_date')]),
        ),
    ]
